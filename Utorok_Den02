
rm -rf /home/einst-0X/oracle/product/19/client_1/network/admin/tnsnames.ora
#
vi /home/gauss-0X/oracle/product/19/client_1/network/admin/tnsnames.ora
orcl =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 10.233.133.28)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl)
    )
  )

cd 
cd /home/einst-0X
vi .bash_profile
## pridat na koniec suboru
export ORACLE_HOME=/home/gauss-0X/oracle/product/19.0.0/client_1
export PATH=$PATH:$ORACLE_HOME/bin
alias stud='sqlplus student0X@orcl'
alias s+='rlwrap sqlplus student0X/start123@orcl'
s+


JAZYK SQL
----------------------------------------------------------------------------------------------------------------------------
Základné syntaktické konštrukcie jazyka SQL sa rozdeľujú do 4 zákl. skupín:
1.	DML (Data Manipulation Language) 
	príkazy určené na manipuláciu s dátami
	SELECT, INSERT, DELETE, UPDATE
2.	DDL (Data Definition Language) 
	príkazy určené na definíciu dát, prácu s objektmi
	 CREATE, ALTER, DROP, TRUNCATE, COMMENT, RENAME
3.	DCL (Data Control Language)
	určené na riadenie prístupu k objektom a dátam
	GRANT, REVOKE
4.	TCL (Transaction Control Language) 
	určené na riadenie zmien zrealizovaných DML príkazmi
	COMMIT(potvrdenie zmien), SAVEPOINT, ROLLBACK(vrátenie sa do pôvodného stavu), SET TRANSACTION

## 1.1 Vyber
SELECT * FROM <meno tabuľky>;
SELECT <zoznam stĺpcov v projekcii> / * FROM <meno tabuľky>;


## 1.2 VKLADANIE DAT
INSERT INTO <meno tabuľky> VALUES (<zoznam hodnôt>);
INSERT INTO <meno tabuľky> (zoznam vybratých stĺpcov) VALUES (hodnoty pre vybratý zoznam);

## 1.3 AKTUALIZACIA
UPDATE <meno tabuľky> 
SET <meno stĺpca1> = <výraz1>
[,<meno stĺpca2> = <výraz2> ...]
[WHERE  <podmienka>];

## 1.4 MAZANIE DAT
DELETE FROM <meno tabuľky> 
[WHERE  <podmienka>];

## 1.4 TRUNCATE – DDL príkaz
- odstráni všetky riadky z tabuľky 
TRUNCATE TABLE <meno tabuľky>;

## ZAKLADNE OPERATORY
## BETWEEN
SELECT * FROM zamestnanec WHERE mzda BETWEEN 500 AND 1000;
## IN 
SELECT * FROM zamestnanec WHERE mzda IN (500, 550, 600);
## LIKE
SELECT * FROM zamestnanec WHERE priezvisko LIKE ´%ová´;
Poznámka:
% - skupina ľubovoľných znakov dĺžky 0 až n
_  - jeden ľubovoľný znak

## triedenie/zoradenie záznamov podľa hodnôt niektorého stĺpca resp. Stĺpcov
	ASC – vzostupne, defaultná triedenie
	DESC – zostupne 
SELECT priezvisko, meno FROM zamestnanec ORDER BY priezvisko; 
SELECT priezvisko, meno FROM zamestnanec ORDER BY 1, 2 DESC; 




# ROLES AND PRIVILEGES
# --------------------------------------------------------------------------------------------------
SELECT SYS_CONTEXT ('USERENV', 'SESSION_USER') FROM DUAL;
SELECT SYS_CONTEXT ('USERENV', 'DB_NAME') FROM DUAL;
SELECT SYS_CONTEXT ('USERENV', 'CURRENT_USER') FROM DUAL;

select sid,USERNAME,MACHINE,STATUS,LOGON_TIME,PROGRAM from v$session;


# GRANTS ON v$session
# --------------------------------------------------------------------------
grant select on v_$session to student01;
grant select on v_$session to student02;
grant select on v_$session to student03;
grant select on v_$session to student04;
grant select on v_$session to student05;
grant select on v_$session to student06;
grant select on v_$session to student07;
grant select on v_$session to student08;
grant select on v_$session to student09;
grant select on v_$session to student10;
grant select on v_$session to student11;
grant select on v_$session to student12;


select sid,USERNAME,MACHINE,STATUS,LOGON_TIME,PROGRAM from v$session;
SQL@tSKDB> desc v$session

col USERNAME for a20
col MACHINE for a10
set lines 160
select sid,USERNAME,MACHINE,STATUS,LOGON_TIME,PROGRAM from v$session;

alter session set nls_date_format = 'dd.mm.yyyy hh24:mi:ss';

col USERNAME for a20
col MACHINE for a10
set lines 160
select sid,USERNAME,MACHINE,STATUS,LOGON_TIME,PROGRAM from v$session where USERNAME is not null;
## https://oracle-base.com/articles/12c/ofs-and-dbfs-enhancements-12cr2


ADMINISTRACIA:
----------------------------------------
## https://www.pcwdld.com/sql-cheat-sheet#wbounce-modal

create user APPADM identified by "start123";
grant connect to APPADM;
grant create table to APPADM;
desc dba_users
select username, profile from dba_users;

ROLES:
---------------------------------------------------
create table test(id number);
insert into test values(1);
insert into test values(1);
insert into test values(1);

create user app2 identified by "start123";
create role demo;
grant connect to demo;
grant select,insert,update,delete on lektor01.welcome to demo;
create role demo2;
grant select,insert,update,delete on sys.test to demo2;
grant demo to demo2;
grant demo2 to app2;


grant dba to student01;
grant dba to student02;
grant dba to student03;
grant dba to student04;
grant dba to student05;
grant dba to student06;
grant dba to student07;
grant dba to student08;
grant dba to student09;
grant dba to student10;
grant dba to student11;
grant dba to student12;


TABLESPACES
----------------------------------------------------
set pagesize 2000;
define used_percent
column tablespace_name format a30;
select tablespace_name,
       round(sum(tbs_bytes_total)/1024/1024,3)  tot_MB,
       round((sum(tbs_bytes_total)- SUM(tbs_bytes_free ))/1024/1024,2) used_MB,
       round((SUM(tbs_bytes_free))/1024/1024,2) free_MB,
       round((sum(tbs_bytes_total) - SUM(tbs_bytes_free )) *100 / (sum(tbs_bytes_total))  ,2)  used_percent,
       100 - round((sum(tbs_bytes_total) - SUM(tbs_bytes_free )) *100 / (sum(tbs_bytes_total))  ,2) free_percent
       -- round(SUM(tbs_bytes_free/NULLIF(tbs_bytes_total,0))/1024/1024,2)*100 free_percent
from
 (SELECT tablespace_name, 0 tbs_bytes_total, SUM(bytes) tbs_bytes_free
  FROM   dba_free_space
  GROUP BY tablespace_name
 UNION
  SELECT tablespace_name   ,SUM(bytes)  tbs_bytes_total, 0 tbs_bytes_free
  FROM   v$datafile_header
  group by tablespace_name )
group by tablespace_name
order by used_percent asc;


alter user APPADM quota 2M on USERS;
select * from dba_profiles;
select * from v$parameter where parameter like '%FILE%';
select * from session_privs;

## resize tablespace
alter database datafile '/XXX/CCC/AAA/dasda.dbf' resize 200M;
alter tablespace add datafile '/XXX/CCC/AAA/dasda.dbf' size 200M;




## check user grants 
---------------------------------------------------
set pages 0 feed off veri off lines 500

accept oldname prompt "Enter user to model new user to: "
accept newname prompt "Enter new user name: "


-- Grant Roles...
select 'grant '||granted_role||' to &&newname'||
       decode(ADMIN_OPTION, 'YES', ' WITH ADMIN OPTION')||';'
from   user_role_privs;

-- Grant System Privs...
select 'grant '||privilege||' to &&newname'||
       decode(ADMIN_OPTION, 'YES', ' WITH ADMIN OPTION')||';'
from   user_sys_privs;

-- Grant Table Privs...
select 'grant '||privilege||' on '||owner||'.'||table_name||' to &&newname;'
from   sys.user_tab_privs
where  grantee = upper('&&oldname');

-- Grant Column Privs...
select 'grant '||privilege||' on '||owner||'.'||table_name||
       '('||column_name||') to &&newname;'
from   sys.user_col_privs
where  grantee = upper('&&oldname');

-- Tablespace Quotas...
select 'alter user '||username||' quota '||
decode(max_bytes, -1, 'UNLIMITED', max_bytes)||
' on '||tablespace_name||';'
from sys.user_ts_quotas
where username = upper('&oldname');

-- Set Default Role...
set serveroutput on
declare
  defroles varchar2(4000);
begin
  for c1 in (select * from sys.user_role_privs
              where grantee = upper('&&oldname')
                and default_role = 'YES'
  ) loop
      if length(defroles) > 0 then
         defroles := defroles||','||c1.granted_role;
      else
         defroles := defroles||c1.granted_role;
      end if;
  end loop;
  dbms_output.put_line('alter user &&newname default role '||defroles||';');
end;
/





## clone_user - clone_user.sql
----------------------------------------------------
set pages 0 feed off veri off lines 500

accept oldname prompt "Enter user to model new user to: "
accept newname prompt "Enter new user name: "
-- accept psw     prompt "Enter new user's password: "

-- Create user...
select 'create user &&newname identified by values '''||password||''''||
-- select 'create user &&newname identified by &psw'||
       ' default tablespace '||default_tablespace||
       ' temporary tablespace '||temporary_tablespace||' profile '||
       profile||';'
from   sys.dba_users
where  username = upper('&&oldname');

-- Grant Roles...
select 'grant '||granted_role||' to &&newname'||
       decode(ADMIN_OPTION, 'YES', ' WITH ADMIN OPTION')||';'
from   sys.dba_role_privs
where  grantee = upper('&&oldname');

-- Grant System Privs...
select 'grant '||privilege||' to &&newname'||
       decode(ADMIN_OPTION, 'YES', ' WITH ADMIN OPTION')||';'
from   sys.dba_sys_privs
where  grantee = upper('&&oldname');

-- Grant Table Privs...
select 'grant '||privilege||' on '||owner||'.'||table_name||' to &&newname;'
from   sys.dba_tab_privs
where  grantee = upper('&&oldname');

-- Grant Column Privs...
select 'grant '||privilege||' on '||owner||'.'||table_name||
       '('||column_name||') to &&newname;'
from   sys.dba_col_privs
where  grantee = upper('&&oldname');

-- Tablespace Quotas...
select 'alter user '||username||' quota '||
decode(max_bytes, -1, 'UNLIMITED', max_bytes)||
' on '||tablespace_name||';'
from sys.dba_ts_quotas
where username = upper('&oldname');

-- Set Default Role...
set serveroutput on
declare
  defroles varchar2(4000);
begin
  for c1 in (select * from sys.dba_role_privs
              where grantee = upper('&&oldname')
                and default_role = 'YES'
  ) loop
      if length(defroles) > 0 then
         defroles := defroles||','||c1.granted_role;
      else
         defroles := defroles||c1.granted_role;
      end if;
  end loop;
  dbms_output.put_line('alter user &&newname default role '||defroles||';');
end;
/



s+
set echo on time on timing on
create table T1_JOZO (id number);
@/tmp/sw/VYT_TAB_OZ.txt


-------------------------------------------------------------------------------------------------------------------------------------
ULOHA 1
1/ nastavte v tabulke COUNTRIES hodnotu COUNTRY_NAME na 'LALA' kde COUNTRY_ID je 546

